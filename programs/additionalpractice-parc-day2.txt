Arrays
Reference Code : p4Complexity : Level2
============
Sahana and her friend Kodis are given two arrarys of integers of same length. Sahana is required to match her array elements with Kodis's array. Help her find the number of times the increment or decrement that she has to do to make the array elements same. She can either increment her array elements by 3 or decrement them by 2 as many times as she needs to finish her task. Help her count the minimum number of steps in which she can complete the given task.
 
Input:
The first line consists of the size (n) of the arrays
The next n lines consists of the n integers of the first array. (Sahana's array)
The next n lines consists of the n integers of the second array. (Kodi's array)
 
Output:
The output consists of a single line which contains the number of times the increment or decrement has taken place.
 
Sample Output 1:
Enter the size of the arrays: 
3 
Enter the elements of array 1 
4
3
8 
Enter the elements of array 2 
5
9
12 
Result: 7
 
Sample Output 2:
Enter the size of the arrays: 
1 
Enter the elements of array 1 
5 
Enter the elements of array 2 
-3 
Result: 4
 
 
Explanation:
Consider the first sample input.
Need to change to array {4,3,8} to {5,9,12}

To change 4 to 5, we need to be increment (by 3) once and decrement (by 2) once. No. of operations is 2.
To change 3 to 9, we need to be increment (by 3) twice. No. of operations is 2.
To change 8 to 12, we need to be increment (by 3)twice and decrement (by 2) once. No. of operations is 3.

Minimum number of operations required to convert Sahana's array to Kodi's array is 2+2+3 = 7.

 
In the above sample output 2, we have 5 at index 0 in array 1 and -3 at same index 0 in array 2. Since the difference between the two is 8, the value 5 is decremented by 2, 4 times to get the value of -3.
========================
  import java.util.*;
class Main
{
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the size of the arrays:");
        int n=sc.nextInt();
        //int m=sc.nextInt();
        int count=0,count1=0;
        int a[]=new int[n];
        int b[]=new int[n];
         System.out.println("Enter the elements of array 1");
        for(int i=0;i<n;i++)
        {
            a[i]=sc.nextInt();
        }
        
         System.out.println("Enter the elements of array 2");
         for(int i=0;i<n;i++)
        {
            b[i]=sc.nextInt();
        }
        
        for(int i=0;i<n;i++)
        {
           // count=0;
            while(a[i]!=b[i])
            {
                if(a[i]<b[i])
                {
                a[i]=a[i]+3;
               count1++;                
            }
            
            if(a[i]>b[i])
            {
                a[i]=a[i]-2;
                count1++;
            }
            
            }
            
        }
        
        int sum=count+count1;
        
        System.out.println("Result: "+sum);
        
    }
    
}
==========================================================###############==============
Roman Numbers
Reference Code : p5Complexity : Level2
Few people in Rome know only roman letters for expressing the numbers. They are planning to visit England for their business establishment. Their problem is with the number expression. They need an application which converts the roman string to numbers.
Write a prigram to build that appication.

Input:
An String is given which is the roman number.

Output:

The number has to be printed.
 

Note:
The Input Number range is 1 to 89.
(I - 1, V – 5, X – 10, L – 50)

 
Sample Input1:
VIII
Sample Output 1:
8
 
Sample input 2:
XXXV
Sample Output 2:
35
=====================================
  import java.util.*;
class Main
{
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        int i,sum=0;
        String s=sc.nextLine();
        for(i=0;i<s.length();i++)
        {
            if((s.charAt(i)=='I')&&(i+1)<s.length())
            {
                if(s.charAt(i+1)=='V')
                {
                    i++;
                    sum=sum+4;
                }
                else if(s.charAt(i+1)=='X')
                {
                    i++;
                    sum=sum+9;
                }
                else if(s.charAt(i+1)=='L')
                {
                    i++;
                    sum=sum+49;
                }
                else
                {
                    sum=sum+1;
                }
                
            }
            else if(s.charAt(i)=='V')
            sum=sum+5;
            else if(s.charAt(i)=='X')
            sum=sum+10;
            else if(s.charAt(i)=='L')
            sum=sum+50;
            else
            sum=sum+1;
            }
            System.out.println(sum);
        }
    }
==================##################===================
Flickering Bulbs

Reference Code : p6Complexity : Level2

Consider there are n bulbs in a room. Due to voltage fluctuation the bulbs start flickering. Each bulb will flicker at different intervals. 
Write a program to find the first coincidence that all the bulbs will flicker together. 


[Note:] There will be only positive integers. Use singular and plurals while printing. 

Input Format: 
The first line consists of n number of bulbs 
Then n lines consists of n elements which denotes the ith second that each bulb flicker 

Output Format: 
The ouput will be the coincided second at all bulb will flicker
Sample Input/Output 1:

Enter number of bulbs 
3 
Enter the flicker second of bulb 1 : 
5 
Enter the flicker second of bulb 2 : 
8 
Enter the flicker second of bulb 3 : 
7 
From now, all bulbs will flicker after 280 seconds
Sample Input/Output 2:

Enter number of bulbs 
3 
Enter the flicker second of bulb 1 : 
1 
Enter the flicker second of bulb 2 : 
1 
Enter the flicker second of bulb 3 : 
1 
From now, all bulbs will flicker after 1 second 

==============================
  import java.util.*;
class Main{
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter number of bulbs");
        int n=sc.nextInt();
        int a[]=new int[n];
        if(n<0){
            System.exit(0);
        }
        int i,mul=1,flag=0;
        for(i=0;i<n;i++){
            System.out.println("Enter the flicker second of bulb "+(i+1)+" :");
             a[i]=sc.nextInt();
            if(a[i]<0){
                System.exit(0);
            }
           mul*=a[i];
          
        }
        for(i=1;i<=mul;i++){
            int count =0;
            for(int j=0;j<n;j++){
                if(i%a[j]==0)
                count++;
                if(count==n){
                    flag=1;
                    break;
                }
            }
            if(flag==1){
                break;
            }
        }
        if(i!=1){
     System.out.println("From now, all bulbs will flicker after "+i+" seconds");
     
        }
        else {
           System.out.println("From now, all bulbs will flicker after "+i+" second"); 
        }
    }
}
==================================


